<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<context:annotation-config />
	<context:component-scan base-package="de.hska.iwii" />
	<context:property-placeholder location="classpath:/pictureCommunityHSQL.properties" />
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->

	<!-- Alle Einstellungen fuer Spring-Security sind in eine separate Datei ausgelagert. -->
	<import resource="applicationSecurity.xml"/>

	<!-- SQL Datasource -->
	<bean scope="singleton" id="pictureCommunityDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"
		p:driverClass="${pictureCommunity.jdbc.driverClass}"
		p:url="${pictureCommunity.jdbc.url}"
		p:username="${pictureCommunity.jdbc.username}"
		p:password="${pictureCommunity.jdbc.password}"
	/>

	<!-- Spring transaction manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pictureCommunityDataSource"/>
	</bean>

	<bean id="userDAO" class="de.hska.iwii.picturecommunity.backend.dao.UserDAO" scope="singleton">
		<property name="dataSource" ref="pictureCommunityDataSource"/>
		<property name="transactionTemplate">
			<bean class="org.springframework.transaction.support.TransactionTemplate">
				<property name="transactionManager" ref="transactionManager"/>
				<property name="isolationLevelName" value="ISOLATION_SERIALIZABLE"/>
			</bean>
		</property>
	</bean>

	<bean id="pictureDAO" class="de.hska.iwii.picturecommunity.backend.dao.PictureDAO" scope="singleton">
		<property name="dataSource" ref="pictureCommunityDataSource"/>
		<property name="transactionTemplate">
			<bean class="org.springframework.transaction.support.TransactionTemplate">
				<property name="transactionManager" ref="transactionManager"/>
				<property name="isolationLevelName" value="ISOLATION_SERIALIZABLE"/>
			</bean>
		</property>
	</bean>
	
  <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
    <property name="scopes">
      <map>
        <entry key="view">
          <bean class="de.hska.iwii.picturecommunity.spring.ViewScope" />
        </entry>
      </map>
    </property>
  </bean>
  
	<bean id="databaseInitalizer" class="de.hska.iwii.picturecommunity.backend.database.Initializer" scope="singleton">
		<property name="dataSource" ref="pictureCommunityDataSource"/>
		<property name="ddlCreateDatabaseFile" value="/WEB-INF/ddl/${pictureCommunity.ddlcreatedatabasefile}"/>
		<property name="ddlRecreateSchemaFile" value="/WEB-INF/ddl/${pictureCommunity.ddlrecreateschemafile}"/>
		<property name="ddlPolicy" value="${pictureCommunity.ddlpolicy}"/>
		<property name="schema" value="${pictureCommunity.schema}"/>
		<property name="database" value="${pictureCommunity.database}"/>
	</bean>
</beans>
